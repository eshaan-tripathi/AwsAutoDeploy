name: Lambda/Glue CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      LAMBDA_FUNCTION_NAME: esh-lambda-demo
      GLUE_JOB_NAME: esh-glue-job

    steps:
      # 1. Checkout the code
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. Setup Python (if your Lambda/Glue code is Python)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 3. Install dependencies
      - name: Install Dependencies
        run: |
          pip install -r src/requirements.txt
          # If using Node.js Lambda
          # npm install --prefix src

      # 4. Run tests
      - name: Run Tests
        run: |
          cd src
          pytest || exit 1  # Exit if tests fail
          # For Node.js: npm test || exit 1

      # 5. Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 6. Deploy or update Lambda function
      - name: Deploy/Update Lambda
        run: |
          FUNCTION_EXISTS=$(aws lambda get-function --function-name $LAMBDA_FUNCTION_NAME --query 'Configuration.FunctionName' --output text 2>/dev/null || echo "")
          
          zip -r lambda_package.zip . -x "*.git*" -x "tests/*"
          
          if [ "$FUNCTION_EXISTS" == "$LAMBDA_FUNCTION_NAME" ]; then
            echo "Updating existing Lambda function..."
            aws lambda update-function-code --function-name $LAMBDA_FUNCTION_NAME --zip-file fileb://lambda_package.zip
          else
            echo "Creating new Lambda function..."
            aws lambda create-function \
              --function-name $LAMBDA_FUNCTION_NAME \
              --runtime python3.11 \
              --role arn:aws:iam::123456789012:role/your-lambda-role \
              --handler handler.lambda_handler \
              --zip-file fileb://lambda_package.zip
          fi

      # 7. Deploy or update Glue job (optional, if you have Glue)
      - name: Deploy/Update Glue Job
        run: |
          JOB_EXISTS=$(aws glue get-job --job-name $GLUE_JOB_NAME --query 'Job.Name' --output text 2>/dev/null || echo "")
          
          if [ "$JOB_EXISTS" == "$GLUE_JOB_NAME" ]; then
            echo "Updating existing Glue job..."
            aws glue update-job --job-name $GLUE_JOB_NAME --job-update file://glue_job_update.json
          else
            echo "Creating new Glue job..."
            aws glue create-job --cli-input-json file://glue_job_create.json
          fi
